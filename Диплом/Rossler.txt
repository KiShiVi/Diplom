/*ROSSLER SYSTEM*/

x 	- x[0] = 0.1
y 	- x[1] = 0.1
z 	- x[2] = 0.1

/////////////////////////
s 	- a[0] = 0.5 (0 - 1)
a 	- a[1] = 0.2 (0 - 0.4)
b 	- a[2] = 0.2 (0 - 2)
c 	- a[3] = 5.7 (0 - 45)

/////////////////////////

double h1, h2;
h1 = h * a[0];
h2 = h * (1 - a[0]);

x[0] = x[0] + h1 * ( -x[1] - x[2] );
x[1] = x[1] + h1 * ( x[0] + a[1] * x[1] );
x[2] = x[2] + h1 * ( a[2] + x[2] * ( x[0] - a[3] ) );
x[2] = ( x[2] + h2 * a[2] ) / ( 1 - h2 * ( x[0] - a[3] ) );
x[1] = ( x[1] + h2 * x[0] ) / ( 1 - h2 * a[1] );
x[0] = x[0] + h2 * ( -x[1] - x[2] );

//CHUA

0.1,													// const double tMax,
1000,													// const int nPts,
0.000001,													// const double h,
4,														// const int amountOfInitialConditions,

v1	- x[0]	= 0.01
v2	- x[1]	= 0.01
i3	- x[2]	= 0
vc	- x[3]	= 0

/////////////////////////

s	- a[0]	= 0.5
R1	- a[1]	= 1500 (1430, 1510)
G	- a[2]	= 0.71e-3 (0.672e-3, 0.71e-3)
L	- a[3]	= 17.2e-3 (0.016, 0.0195)
C1	- a[4]	= 10e-9
C2	- a[5]	= 100e-9
R	- a[6]	= 1000
C	- a[7]	= 10e-9
n	- a[8]	= 1.827
Is	- a[9]	= 6.891e-9
p	- a[10]	= 21.893815

/////////////////////////

double h1, h2, temp;
h1 = h * a[0];
h2 = h * ( 1 - a[0] );

x[0] = x[0] + h1 * ( ( ( a[1] * a[2] - 1 ) * x[0] + x[1] - a[1] * 2 * a[9] * exp( -a[10] * x[3] ) * sinh( a[10] * x[0] ) ) / ( a[1] * a[4] ) );
x[1] = x[1] + h1 * ( ( x[0] - x[1] ) / ( a[1] * a[5] ) - x[2] / a[5] );
x[2] = x[2] + h1 * ( ( x[1] ) / ( a[3] ) );
x[3] = x[3] + h1 * ( ( a[6] * a[9] * exp( -a[10] * x[3] ) * cosh( a[10] * x[0] ) - x[3] - a[6] * 2 * a[9] ) / ( a[6] * a[7] ) );
temp = x[3];
x[3] = temp + h2 * ( ( a[6] * a[9] * exp( -a[10] * x[3] ) * cosh( a[10] * x[0] ) - x[3] - a[6] * 2 * a[9] ) / ( a[6] * a[7] ) );
x[3] = temp + h2 * ( ( a[6] * a[9] * exp( -a[10] * x[3] ) * cosh( a[10] * x[0] ) - x[3] - a[6] * 2 * a[9] ) / ( a[6] * a[7] ) );
x[3] = temp + h2 * ( ( a[6] * a[9] * exp( -a[10] * x[3] ) * cosh( a[10] * x[0] ) - x[3] - a[6] * 2 * a[9] ) / ( a[6] * a[7] ) );
x[3] = temp + h2 * ( ( a[6] * a[9] * exp( -a[10] * x[3] ) * cosh( a[10] * x[0] ) - x[3] - a[6] * 2 * a[9] ) / ( a[6] * a[7] ) );
x[2] = x[2] + h2 * ( ( x[1] ) / ( a[3] ) );
x[1] = ( x[1] * a[1] * a[5] + h2 * x[0] - a[1] * h2 * x[2] ) / ( a[1] * a[5] + h2 );
temp = x[0];
x[0] = temp + h2 * ( ( ( a[1] * a[2] - 1 ) * x[0] + x[1] - a[1] * 2 * a[9] * exp( -a[10] * x[3] ) * sinh( a[10] * x[0] ) ) / ( a[1] * a[4] ) );
x[0] = temp + h2 * ( ( ( a[1] * a[2] - 1 ) * x[0] + x[1] - a[1] * 2 * a[9] * exp( -a[10] * x[3] ) * sinh( a[10] * x[0] ) ) / ( a[1] * a[4] ) );
x[0] = temp + h2 * ( ( ( a[1] * a[2] - 1 ) * x[0] + x[1] - a[1] * 2 * a[9] * exp( -a[10] * x[3] ) * sinh( a[10] * x[0] ) ) / ( a[1] * a[4] ) );
x[0] = temp + h2 * ( ( ( a[1] * a[2] - 1 ) * x[0] + x[1] - a[1] * 2 * a[9] * exp( -a[10] * x[3] ) * sinh( a[10] * x[0] ) ) / ( a[1] * a[4] ) );



//KOLPITS

Vce	- x[0] = 0
Vbe	- x[1] = 0
Il	- x[2] = 0

/////////////////////////

s	- a[0]	= 0.5
C1	- a[1]	= 54e-9
C2	- a[2]	= 54e-9
Vee	- a[3]	= -5
Ree	- a[4]	= 400 (50, 500)
L	- a[5]	= 98.5e-6
Vcc	- a[6]	= 5
Rl	- a[7]	= 35 (5, 55)
Vth	- a[8]	= 0.75
Ron	- a[9]	= 100
b	- a[10]	= 200 (1, 1000)

/////////////////////////

__device__ __host__ double Ib ( double Vbe )
{
	return Vbe <= 0.75 ? 0 : ( ( Vbe - 0.75 ) / 100 );
}

__device__ __host__ double Ic ( double Vbe )
{
	return 200 * Ib( Vbe );
}

double h1, h2, temp;
h1 = h * a[0];
h2 = h * ( 1 - a[0] );

x[0] = x[0] + h1 * ( ( x[2] - Ic( x[1] ) ) / ( a[1] ) );
x[1] = x[1] + h1 * ( ( -a[3] - x[1] - x[2] * a[4] - Ib( x[1] ) * a[4] ) / ( a[4] * a[2] ) );
x[2] = x[2] + h1 * ( ( a[6] - x[0] + x[1] - x[2] * a[7] ) / ( a[5] ) );
x[2] = ( x[2] * a[5] + h2 * a[6] - h2 * x[0] + h2 * x[1] ) / ( a[5] + h2 * a[7] );
x[1] = ( x[1] * a[4] * a[2] - h2 * a[3] - h2 * x[2] * a[4] - h2 * Ib( x[1] ) * a[4] ) / ( a[4] * a[2] + h2 );
x[0] = x[0] + h2 * ( ( x[2] - Ic( x[1] ) ) / ( a[1] ) );

// float h1, h2, temp, Ic, Ib;
	// h1 = h * a[0];
	// h2 = h * (1 - a[0]);

// Ib = x[1] <= 0.75 ? 0 : ((x[1] - 0.75) / 100);
// Ic = a[10] * Ib;

	// x[0] = x[0] + h1 * ((x[2] - Ic) / (a[1]));

// Ib = x[1] <= 0.75 ? 0 : ((x[1] - 0.75) / 100);
// Ic = a[10] * Ib;


	// x[1] = x[1] + h1 * ((-a[3] - x[1] - x[2] * a[4] - Ib * a[4]) / (a[4] * a[2]));
	// x[2] = x[2] + h1 * ((a[6] - x[0] + x[1] - x[2] * a[7]) / (a[5]));
	// x[2] = (x[2] * a[5] + h2 * a[6] - h2 * x[0] + h2 * x[1]) / (a[5] + h2 * a[7]);

// Ib = x[1] <= 0.75 ? 0 : ((x[1] - 0.75) / 100);
// Ic = a[10] * Ib;


	// x[1] = (x[1] * a[4] * a[2] - h2 * a[3] - h2 * x[2] * a[4] - h2 * Ib * a[4]) / (a[4] * a[2] + h2);

// Ib = x[1] <= 0.75 ? 0 : ((x[1] - 0.75) / 100);
// Ic = a[10] * Ib;

	// x[0] = x[0] + h2 * ((x[2] - Ic) / (a[1]));
	
		//bifurcation1D(
	//	0.0005,											 	// const double tMax,
	//	1000,											 	// const int nPts,
	//	1e-8,											 	// const double h,
	//	3,												 	// const int amountOfInitialConditions,
	//	new double[3] {0, 0, 0},					 	// const double* initialConditions,
	//	new double[2] {5, 55},			 		// const double* ranges, 
	//	new int[1] {7},								 	// const int* indicesOfMutVars,
	//	0,												 	// const int writableVar,
	//	50,											 	// const double maxValue,
	//	0.005,											 	// const double transientTime,
	//	new double[11] {0.5, 54e-9, 54e-9, -5, 400, 98.5e-6, 5, 35, 0.75, 100, 200},				 	// const double* values,
	//	11,													// const int amountOfValues,
	//	1);												// const double eps);

